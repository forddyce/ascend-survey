name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install

      - name: Run Vitest Tests
        run: npm test

  deploy-supabase-functions:
    name: Deploy Supabase Edge Functions
    runs-on: ubuntu-latest
    needs: test
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno (for Edge Functions)
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Setup Node.js (for npm)
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install Supabase CLI locally as dev dependency
        run: npm install -D supabase

      - name: Link Supabase Project
        run: npx supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Set Edge Function Environment Variables
        run: |
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> $GITHUB_ENV

      - name: Deploy submit-survey Edge Function
        run: npx supabase functions deploy submit-survey --no-verify-jwt
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

  deploy-supabase-migrations:
    name: Deploy Supabase Database Migrations
    runs-on: ubuntu-latest
    needs: deploy-supabase-functions
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (for npm)
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install Supabase CLI locally as dev dependency
        run: npm install -D supabase

      - name: Link Supabase Project
        run: npx supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Apply Database Migrations
        run: SUPABASE_DB_PASSWORD=${{ secrets.SUPABASE_DB_PASSWORD}} npx supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

  deploy-frontend:
    name: Deploy React Frontend
    runs-on: ubuntu-latest
    needs: test
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
      contents: write
      deployments: write
      pull-requests: write
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install

      - name: Build React App
        run: npm run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          github-token: ${{ secrets.GITHUB_TOKEN }}
        id: vercel-deployment
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
